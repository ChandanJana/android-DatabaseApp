plugins {
    id 'com.android.application'
    // Add the Google services Gradle plugin
    id 'com.google.gms.google-services'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.zebra.showcaseapp"
        minSdk 30
        targetSdk 33
        versionCode 35
        versionName "1.0.35.UAT1"
        setProperty("archivesBaseName", "ShowcaseDemo")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [find_packagename: "com.zebra.mdna.enterprisebrowser"]
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        release {
            storeFile file("signedCertificate.jks")
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
        }
    }

    buildTypes {
        debug {
            debuggable true
            buildConfigField "String", "find_packagename", "\"com.zebra.mdna.enterprisebrowser\""
            buildConfigField "String", "find_eb_versionname", "\"2.5.0.0\""
            buildConfigField "String", "find_packagename_dw", "\"com.symbol.datawedge\""
        }
        release {
            debuggable false
            minifyEnabled false
            buildConfigField "String", "find_packagename", "\"com.zebra.mdna.enterprisebrowser\""
            buildConfigField "String", "find_eb_versionname", "\"2.5.0.0\""
            buildConfigField "String", "find_packagename_dw", "\"com.symbol.datawedge\""
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        // add the code from below line.
        applicationVariants.all {
                // this method is use to rename your all apk weather
                // it may be signed or unsigned(debug apk)
            variant ->
                variant.outputs.each {
                        // on below line we are setting a
                        // name to our apk as ShowcaseDemo.apk
                    output ->
                        def name = "ShowcaseDemo.apk"
                        // on below line we are setting the
                        // outputFile Name to our apk file.
                        output.outputFileName = name
                }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Import the Firebase BoM
    //implementation platform('com.google.firebase:firebase-bom:30.4.1')

    // TODO: Add the dependencies for Firebase products you want to use
    implementation 'com.google.firebase:firebase-storage:20.1.0'
    implementation 'com.google.firebase:firebase-firestore-ktx:24.4.0'
    implementation "com.google.firebase:firebase-analytics:21.2.0"
    //implementation 'com.google.firebase:firebase-firestore:24.4.0'

    // When using the BoM, don't specify versions in Firebase dependencies
    //implementation 'com.google.firebase:firebase-analytics'
    //implementation 'com.jakewharton:butterknife:10.2.3'
    //annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'
    //implementation(group: 'com.symbol.mxmf', name: 'MXCommon', version: '4.+', ext: 'aar')

    implementation 'com.intuit.sdp:sdp-android:1.1.0'
    implementation 'com.intuit.ssp:ssp-android:1.1.0'

    implementation "android.arch.work:work-runtime:1.0.1"
    /*def work_version = "2.6.0"
    // Force WorkManager 2.6.0 for transitive dependency
    implementation("androidx.work:work-runtime:$work_version") {
        force = true
    }*/
    /*api(group: "androidx.work", name: "work-runtime") {
        version {
            strictly "2.7.0-alpha04"
        }
    }*/
    implementation "androidx.concurrent:concurrent-futures:1.1.0"

    //implementation 'android.arch.persistence.room:runtime:1.1.1'
    //annotationProcessor 'android.arch.persistence.room:compiler:1.1.1'
    def room_version = "2.5.1"

    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor("androidx.room:room-compiler:$room_version")
    implementation(group: 'com.zebra.securitylibs', name: 'SecurityCommonLibrary', version: '1.+', ext: 'aar')
    implementation(group: 'com.symbol.osx', name: 'ZebraSecurityAuth', version: '2.+', ext: 'aar')
}